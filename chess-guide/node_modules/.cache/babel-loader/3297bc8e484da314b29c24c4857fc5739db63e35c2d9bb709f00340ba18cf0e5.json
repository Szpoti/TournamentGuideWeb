{"ast":null,"code":"var _jsxFileName = \"D:\\\\Repos\\\\ChessTournamentGuide\\\\chess-guide\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport logo from \"./chessQueen.png\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport \"./App.css\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /** @type {Player[]} */\n  const [players, setPlayers] = useState([]);\n  const [rounds, setRounds] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const backendUri = \"https://localhost:7059\";\n  useEffect(() => {\n    const parsedQueryString = queryString.parse(window.location.search);\n    const adminKey = parsedQueryString.adminKey;\n    fetch(`${backendUri}/Admin/login?apiKey=${adminKey}`).then(response => response.json()).then(data => setIsAdmin(data)).catch(error => console.error('Error fetching data:', error));\n    fetch(`${backendUri}/Player/players`).then(response => response.json()).then(data => {\n      const players = data.map(playerData => new Player(playerData.name, playerData.elo, playerData.id, playerData.gamesWon, playerData.gamesDrawed, playerData.gamesLost, playerData.gamesPlayed, playerData.points));\n      players.sort((playerA, playerB) => playerB.points - playerA.points);\n      setPlayers(players);\n    }).catch(error => console.error('Error fetching data:', error));\n    fetch(`${backendUri}/Round/rounds`).then(response => response.json()).then(data => {\n      const roundsData = data.map(roundData => new Round(roundData.id, new PlayerInfo(roundData.player1.id, roundData.player1.colour), new PlayerInfo(roundData.player2.id, roundData.player2.colour), roundData.isDraw, roundData.matchLink, roundData.winnerColour, roundData.loserColour));\n      setRounds(roundsData);\n    }).catch(error => console.error('Error fetching rounds:', error));\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  // Function to get player's game details\n  const getPlayerGames = playerId => {\n    return rounds.filter(round => round.player1.id === playerId || round.player2.id === playerId).map((round, index) => {\n      let playerInfo;\n      let opponentInfo;\n      if (round.player1.id === playerId) {\n        playerInfo = round.player1;\n        opponentInfo = round.player2;\n      } else {\n        playerInfo = round.player2;\n        opponentInfo = round.player1;\n      }\n      let result = round.isDraw ? 'Draw' : round.winnerColour === playerInfo.colour ? 'Won' : 'Lost';\n      let playerColor = playerInfo.colour;\n      let opponentName = players.find(opp => opp.id === opponentInfo.id).name;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"vs \", opponentName, \" : \", result, \" with \", playerColor, \" - \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: round.matchLink,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }, this);\n    });\n  };\n  const displayRoundRegisterForm = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [isAdmin && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Logged in as Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"To play, use \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://lichess.org\",\n            children: \"Lichess\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 20\n          }, this), \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Winning a game: 3 points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Losing a game: 0 points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Draw: 1 points each\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordions\",\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          children: players.map((player, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n            eventKey: index.toString(),\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accordion-header\",\n                children: [player.name, \" (Elo: \", player.elo, \") - \", player.points, \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n              className: \"accordion-item\",\n              children: getPlayerGames(player.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this)]\n          }, player.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register Round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(RoundRegisterForm, {\n          players: players,\n          backendUri: backendUri\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"caMRuje8dFuC011zbSbAFUq6ZRY=\");\n_c = App;\nfunction NavbarMenu() {\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expand: \"lg\",\n    className: \"bg-body-tertiary\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        href: \"#home\",\n        children: \"React-Bootstrap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"basic-navbar-nav\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"basic-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"me-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#home\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n            href: \"#link\",\n            children: \"Link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(NavDropdown, {\n            title: \"Dropdown\",\n            id: \"basic-nav-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action/3.1\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action/3.2\",\n              children: \"Another action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action/3.3\",\n              children: \"Something\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(NavDropdown.Item, {\n              href: \"#action/3.4\",\n              children: \"Separated link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 3\n  }, this);\n}\n_c2 = NavbarMenu;\nfunction RoundRegisterForm({\n  players,\n  backendUri\n}) {\n  _s2();\n  const [player1Id, setPlayer1Id] = useState('');\n  const [player2Id, setPlayer2Id] = useState('');\n  const [isDraw, setIsDraw] = useState(false);\n  const [winnerColour, setWinnerColour] = useState('');\n  const [matchLink, setMatchLink] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Determine winner and loser based on the selected colors and result\n    let winnerId, loserId;\n    if (!isDraw) {\n      winnerId = winnerColour === 'White' ? player1Id : player2Id;\n      loserId = winnerColour === 'Black' ? player1Id : player2Id;\n    }\n    const data = {\n      player1: {\n        id: player1Id,\n        colour: 'White'\n      },\n      player2: {\n        id: player2Id,\n        colour: 'Black'\n      },\n      isDraw,\n      matchLink,\n      winnerColour: isDraw ? null : winnerColour,\n      loserColour: isDraw ? null : winnerColour === 'Black' ? 'White' : 'Black'\n    };\n\n    // Send data to server\n    try {\n      const response = await fetch(`${backendUri}/Round/add-round`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        const result = await response.json();\n        console.log(result);\n        // Handle success response\n      }\n    } catch (error) {\n      console.error('Error posting data:', error);\n      // Handle errors here\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"White:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: player1Id,\n          onChange: e => setPlayer1Id(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), players.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: player.id,\n            children: player.name\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Black:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: player2Id,\n          onChange: e => setPlayer2Id(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), players.map(player => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: player.id,\n            children: player.name\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Draw:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isDraw,\n          onChange: e => setIsDraw(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), !isDraw && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Winner Colour:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: winnerColour,\n          onChange: e => setWinnerColour(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"White\",\n            children: \"White\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Black\",\n            children: \"Black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Match's link:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: matchLink,\n          onChange: e => setMatchLink(e.target.value),\n          placeholder: \"Match's link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n}\n\n/**\r\n * @param {string} name - The name of the player.\r\n * @param {number} elo - The elo rating of the player.\r\n * @param {string} id - The unique identifier for the player.\r\n * @param {number} gamesWon - The number of games won by the player.\r\n * @param {number} gamesDrawed - The number of games drawn by the player.\r\n * @param {number} gamesLost - The number of games lost by the player.\r\n * @param {number} gamesPlayed - The total number of games played by the player.\r\n * @param {number} points - The total points earned by the player.\r\n **/\n_s2(RoundRegisterForm, \"jDA95uZW/qcAFwPwW8sGUHYJbxg=\");\n_c3 = RoundRegisterForm;\nclass Player {\n  constructor(name, elo, id, gamesWon, gamesDrawed, gamesLost, gamesPlayed, points) {\n    this.name = name || '';\n    this.elo = elo || 0;\n    this.id = id || '';\n    this.gamesWon = gamesWon || 0;\n    this.gamesDrawed = gamesDrawed || 0;\n    this.gamesLost = gamesLost || 0;\n    this.gamesPlayed = gamesPlayed || 0;\n    this.points = points || 0;\n  }\n}\n\n/**\r\n * @typedef {Object} PlayerInfo\r\n * @property {string} id - The unique identifier for the player.\r\n * @property {string} colour - The color representing the player.\r\n */\nclass PlayerInfo {\n  constructor(id, colour) {\n    this.id = id;\n    this.colour = colour;\n  }\n}\n\n/**\r\n * @param {string} id - The unique identifier for the round.\r\n * @param {PlayerInfo} player1 - Information about the first player.\r\n * @param {PlayerInfo} player2 - Information about the second player.\r\n * @param {boolean} isDraw - Indicates if the round is a draw.\r\n * @param {string} matchLink - The link to the match.\r\n * @param {string} winnerColour - The color representing the winner.\r\n * @param {string} loserColour - The color representing the loser.\r\n */\nclass Round {\n  constructor(id, player1, player2, isDraw, matchLink, winnerColour, loserColour) {\n    this.id = id;\n    this.player1 = player1;\n    this.player2 = player2;\n    this.isDraw = isDraw;\n    this.matchLink = matchLink;\n    this.winnerColour = winnerColour;\n    this.loserColour = loserColour;\n  }\n}\nexport { App, NavbarMenu };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"NavbarMenu\");\n$RefreshReg$(_c3, \"RoundRegisterForm\");","map":{"version":3,"names":["logo","React","useState","useEffect","queryString","Container","Nav","Navbar","NavDropdown","Accordion","jsxDEV","_jsxDEV","App","_s","players","setPlayers","rounds","setRounds","isAdmin","setIsAdmin","backendUri","parsedQueryString","parse","window","location","search","adminKey","fetch","then","response","json","data","catch","error","console","map","playerData","Player","name","elo","id","gamesWon","gamesDrawed","gamesLost","gamesPlayed","points","sort","playerA","playerB","roundsData","roundData","Round","PlayerInfo","player1","colour","player2","isDraw","matchLink","winnerColour","loserColour","getPlayerGames","playerId","filter","round","index","playerInfo","opponentInfo","result","playerColor","opponentName","find","opp","children","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","displayRoundRegisterForm","className","src","alt","player","Item","eventKey","toString","Header","Body","RoundRegisterForm","_c","NavbarMenu","expand","Brand","Toggle","Collapse","Link","title","Divider","_c2","_s2","player1Id","setPlayer1Id","player2Id","setPlayer2Id","setIsDraw","setWinnerColour","setMatchLink","handleSubmit","e","preventDefault","winnerId","loserId","method","headers","body","JSON","stringify","ok","Error","status","log","onSubmit","value","onChange","type","checked","placeholder","_c3","constructor","$RefreshReg$"],"sources":["D:/Repos/ChessTournamentGuide/chess-guide/src/App.js"],"sourcesContent":["import logo from \"./chessQueen.png\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport \"./App.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\n\r\nfunction App() {\r\n\t\t/** @type {Player[]} */\r\n\tconst [players, setPlayers] = useState([]);\r\n\tconst [rounds, setRounds] = useState([]);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst backendUri =  \"https://localhost:7059\";\r\n\r\n\tuseEffect(() => {\r\n\t\tconst parsedQueryString = queryString.parse(window.location.search);\r\n        const adminKey = parsedQueryString.adminKey;\r\n\r\n\t\tfetch(`${backendUri}/Admin/login?apiKey=${adminKey}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => setIsAdmin(data))\r\n\t\t.catch(error => console.error('Error fetching data:', error));\r\n\r\n        fetch(`${backendUri}/Player/players`)\r\n            .then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst players = data.map(playerData => new Player(\r\n\t\t\t\t\tplayerData.name,\r\n\t\t\t\t\tplayerData.elo,\r\n\t\t\t\t\tplayerData.id,\r\n\t\t\t\t\tplayerData.gamesWon,\r\n\t\t\t\t\tplayerData.gamesDrawed,\r\n\t\t\t\t\tplayerData.gamesLost,\r\n\t\t\t\t\tplayerData.gamesPlayed,\r\n\t\t\t\t\tplayerData.points\r\n\t\t\t\t));\r\n\t\t\t\tplayers.sort((playerA, playerB) => playerB.points - playerA.points);\r\n\t\t\t\tsetPlayers(players);})\r\n            .catch(error => console.error('Error fetching data:', error));\r\n\r\n\t\tfetch(`${backendUri}/Round/rounds`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst roundsData  = data.map(roundData => new Round(\r\n\t\t\t\t\troundData.id,\r\n\t\t\t\t\tnew PlayerInfo(roundData.player1.id, roundData.player1.colour),\r\n\t\t\t\t\tnew PlayerInfo(roundData.player2.id, roundData.player2.colour),\r\n\t\t\t\t\troundData.isDraw,\r\n\t\t\t\t\troundData.matchLink,\r\n\t\t\t\t\troundData.winnerColour,\r\n\t\t\t\t\troundData.loserColour\r\n\t\t\t\t));\r\n\t\t\t\tsetRounds(roundsData );\r\n\t\t\t})\r\n\t\t\t.catch(error => console.error('Error fetching rounds:', error));\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n\t    // Function to get player's game details\r\n\t\tconst getPlayerGames = (playerId) => {\r\n\t\t\treturn rounds.filter(round => round.player1.id === playerId || round.player2.id === playerId)\r\n\t\t\t\t\t\t .map((round, index) => {\r\n\t\t\t\t\t\t\tlet playerInfo;\r\n\t\t\t\t\t\t\tlet opponentInfo;\r\n\t\t\t\t\t\t\tif(round.player1.id === playerId)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tplayerInfo = round.player1;\r\n\t\t\t\t\t\t\t\topponentInfo = round.player2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tplayerInfo = round.player2;\r\n\t\t\t\t\t\t\t\topponentInfo = round.player1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlet result = round.isDraw ? 'Draw' : (round.winnerColour === playerInfo.colour ? 'Won' : 'Lost');\r\n\t\t\t\t\t\t\tlet playerColor = playerInfo.colour;\r\n\t\t\t\t\t\t\tlet opponentName = players.find(opp => opp.id === opponentInfo.id).name;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t <div key={index}>\r\n\t\t\t\t\t\t\t\t\t <p>vs {opponentName} : {result} with {playerColor} - <a href={round.matchLink} target=\"_blank\" rel=\"noopener noreferrer\">Link</a></p>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t );\r\n\t\t\t\t\t\t });\r\n\t\t};\r\n\r\n\t\tconst displayRoundRegisterForm = () => {\r\n\t\t\treturn <div>Form</div>\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t{\r\n\t\t\t\t\tisAdmin && (\r\n\t\t\t\t\t\t<p>Logged in as Admin</p>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tTo play, use <a href=\"https://lichess.org\">Lichess</a>!\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>Winning a game: 3 points</h1>\r\n\t\t\t\t\t<h1>Losing a game: 0 points</h1>\r\n\t\t\t\t\t<h1>Draw: 1 points each</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"separator\" />\r\n\t\t\t\t<div className=\"accordions\">\r\n\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t{players.map((player, index) => (\r\n                        <Accordion.Item eventKey={index.toString()} key={player.id}>\r\n                            <Accordion.Header>\r\n\t\t\t\t\t\t\t\t<div className=\"accordion-header\">{player.name} (Elo: {player.elo}) - {player.points} points</div></Accordion.Header>\r\n                            <Accordion.Body className=\"accordion-item\">\r\n                                {/* Additional details about the player can go here */}\r\n\t\t\t\t\t\t\t\t{getPlayerGames(player.id)}\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    ))}\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tisAdmin && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Register Round</h1>\r\n\t\t\t\t\t<RoundRegisterForm players={players} backendUri={backendUri}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"App-link\"\r\n\t\t\t\t\thref=\"https://reactjs.org\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLearn React\r\n\t\t\t\t</a>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction NavbarMenu() {\r\n\treturn (\r\n\t\t<Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link>\r\n\t\t\t\t\t\t<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">\r\n\t\t\t\t\t\t\t\tAnother action\r\n\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.4\">\r\n\t\t\t\t\t\t\t\tSeparated link\r\n\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\r\nfunction RoundRegisterForm({ players, backendUri }) {\r\n    const [player1Id, setPlayer1Id] = useState('');\r\n    const [player2Id, setPlayer2Id] = useState('');\r\n    const [isDraw, setIsDraw] = useState(false);\r\n    const [winnerColour, setWinnerColour] = useState('');\r\n    const [matchLink, setMatchLink] = useState('');\r\n\r\n\tconst handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Determine winner and loser based on the selected colors and result\r\n        let winnerId, loserId;\r\n        if (!isDraw) {\r\n            winnerId = winnerColour === 'White' ? player1Id : player2Id;\r\n            loserId = winnerColour === 'Black' ? player1Id : player2Id;\r\n        }\r\n\r\n        const data = {\r\n            player1: {\r\n                id: player1Id,\r\n                colour: 'White',\r\n            },\r\n            player2: {\r\n                id: player2Id,\r\n                colour: 'Black',\r\n            },\r\n            isDraw,\r\n            matchLink,\r\n            winnerColour: isDraw ? null : winnerColour,\r\n            loserColour: isDraw ? null : (winnerColour === 'Black' ? 'White' : 'Black')\r\n        };\r\n\r\n        // Send data to server\r\n        try {\r\n            const response = await fetch(`${backendUri}/Round/add-round`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            } else {\r\n                const result = await response.json();\r\n                console.log(result);\r\n                // Handle success response\r\n            }\r\n        } catch (error) {\r\n            console.error('Error posting data:', error);\r\n            // Handle errors here\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>\r\n                    White:\r\n                    <select value={player1Id} onChange={e => setPlayer1Id(e.target.value)}>\r\n                        <option value=\"\">Select Player</option>\r\n                        {players.map(player => (\r\n                            <option key={player.id} value={player.id}>{player.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Black:\r\n                    <select value={player2Id} onChange={e => setPlayer2Id(e.target.value)}>\r\n                        <option value=\"\">Select Player</option>\r\n                        {players.map(player => (\r\n                            <option key={player.id} value={player.id}>{player.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Draw:\r\n                    <input type=\"checkbox\" checked={isDraw} onChange={e => setIsDraw(e.target.checked)} />\r\n                </label>\r\n            </div>\r\n            {!isDraw && (\r\n                <div>\r\n                    <label>\r\n                        Winner Colour:\r\n                        <select value={winnerColour} onChange={e => setWinnerColour(e.target.value)}>\r\n                            <option value=\"\">Select Colour</option>\r\n                            <option value=\"White\">White</option>\r\n                            <option value=\"Black\">Black</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            )}\r\n            <div>\r\n                <label>\r\n                    Match's link:\r\n                    <input type=\"text\" value={matchLink} onChange={e => setMatchLink(e.target.value)} placeholder=\"Match's link\" />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\">SUBMIT</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {string} name - The name of the player.\r\n * @param {number} elo - The elo rating of the player.\r\n * @param {string} id - The unique identifier for the player.\r\n * @param {number} gamesWon - The number of games won by the player.\r\n * @param {number} gamesDrawed - The number of games drawn by the player.\r\n * @param {number} gamesLost - The number of games lost by the player.\r\n * @param {number} gamesPlayed - The total number of games played by the player.\r\n * @param {number} points - The total points earned by the player.\r\n **/\r\nclass Player {\r\n    constructor(name, elo, id, gamesWon, gamesDrawed, gamesLost, gamesPlayed, points) {\r\n        this.name = name || '';\r\n        this.elo = elo || 0;\r\n        this.id = id || '';\r\n        this.gamesWon = gamesWon || 0;\r\n        this.gamesDrawed = gamesDrawed || 0;\r\n        this.gamesLost = gamesLost || 0;\r\n\t\tthis.gamesPlayed = gamesPlayed || 0;\r\n\t\tthis.points = points || 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {Object} PlayerInfo\r\n * @property {string} id - The unique identifier for the player.\r\n * @property {string} colour - The color representing the player.\r\n */\r\nclass PlayerInfo {\r\n    constructor(id, colour) {\r\n        this.id = id;\r\n        this.colour = colour;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} id - The unique identifier for the round.\r\n * @param {PlayerInfo} player1 - Information about the first player.\r\n * @param {PlayerInfo} player2 - Information about the second player.\r\n * @param {boolean} isDraw - Indicates if the round is a draw.\r\n * @param {string} matchLink - The link to the match.\r\n * @param {string} winnerColour - The color representing the winner.\r\n * @param {string} loserColour - The color representing the loser.\r\n */\r\nclass Round {\r\n    constructor(id, player1, player2, isDraw, matchLink, winnerColour, loserColour) {\r\n        this.id = id;\r\n        this.player1 = player1;\r\n        this.player2 = player2;\r\n        this.isDraw = isDraw;\r\n        this.matchLink = matchLink;\r\n        this.winnerColour = winnerColour;\r\n        this.loserColour = loserColour;\r\n    }\r\n}\r\n\r\nexport { App, NavbarMenu };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}