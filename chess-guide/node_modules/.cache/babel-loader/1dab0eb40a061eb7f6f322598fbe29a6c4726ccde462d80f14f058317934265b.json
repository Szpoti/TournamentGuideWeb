{"ast":null,"code":"import logo from\"./chessQueen.png\";import React,{useState,useEffect}from'react';import queryString from'query-string';import\"./App.css\";import Container from\"react-bootstrap/Container\";import Nav from\"react-bootstrap/Nav\";import Navbar from\"react-bootstrap/Navbar\";import NavDropdown from\"react-bootstrap/NavDropdown\";import Accordion from\"react-bootstrap/Accordion\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/** @type {Player[]} */const[players,setPlayers]=useState([]);const[rounds,setRounds]=useState([]);const[isAdmin,setIsAdmin]=useState(false);const backendUri=\"https://localhost:7059\";useEffect(()=>{const parsedQueryString=queryString.parse(window.location.search);const adminKey=parsedQueryString.adminKey;fetch(\"\".concat(backendUri,\"/Admin/login?apiKey=\").concat(adminKey)).then(response=>response.json()).then(data=>setIsAdmin(data)).catch(error=>console.error('Error fetching data:',error));fetch(\"\".concat(backendUri,\"/Player/players\")).then(response=>response.json()).then(data=>{const players=data.map(playerData=>new Player(playerData.name,playerData.elo,playerData.id,playerData.gamesWon,playerData.gamesDrawed,playerData.gamesLost,playerData.gamesPlayed,playerData.points));players.sort((playerA,playerB)=>playerB.points-playerA.points);setPlayers(players);}).catch(error=>console.error('Error fetching data:',error));fetch(\"\".concat(backendUri,\"/Round/rounds\")).then(response=>response.json()).then(data=>{const roundsData=data.map(roundData=>new Round(roundData.id,new PlayerInfo(roundData.player1.id,roundData.player1.colour),new PlayerInfo(roundData.player2.id,roundData.player2.colour),roundData.isDraw,roundData.matchLink,roundData.winnerColour,roundData.loserColour));setRounds(roundsData);}).catch(error=>console.error('Error fetching rounds:',error));},[]);// Empty dependency array means this effect runs once on mount\n// Function to get player's game details\nconst getPlayerGames=playerId=>{return rounds.filter(round=>round.player1.id===playerId||round.player2.id===playerId).map((round,index)=>{let playerInfo;let opponentInfo;if(round.player1.id===playerId){playerInfo=round.player1;opponentInfo=round.player2;}else{playerInfo=round.player2;opponentInfo=round.player1;}let result=round.isDraw?'Draw':round.winnerColour===playerInfo.colour?'Won':'Lost';let playerColor=playerInfo.colour;let opponentName=players.find(opp=>opp.id===opponentInfo.id).name;return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"p\",{children:[\"vs \",opponentName,\" : \",result,\" with \",playerColor,\" - \",/*#__PURE__*/_jsx(\"a\",{href:round.matchLink,target:\"_blank\",rel:\"noopener noreferrer\",children:\"Link\"})]})},index);});};const displayRoundRegisterForm=()=>{return/*#__PURE__*/_jsx(\"div\",{children:\"Form\"});};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[isAdmin&&/*#__PURE__*/_jsx(\"p\",{children:\"Logged in as Admin\"}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"To play, use \",/*#__PURE__*/_jsx(\"a\",{href:\"https://lichess.org\",children:\"Lichess\"}),\"!\"]}),/*#__PURE__*/_jsx(\"h1\",{children:\"Winning a game: 3 points\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Losing a game: 0 points\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Draw: 1 points each\"})]}),/*#__PURE__*/_jsx(\"hr\",{className:\"separator\"}),/*#__PURE__*/_jsx(\"div\",{className:\"accordions\",children:/*#__PURE__*/_jsx(Accordion,{children:players.map((player,index)=>/*#__PURE__*/_jsxs(Accordion.Item,{eventKey:index.toString(),children:[/*#__PURE__*/_jsx(Accordion.Header,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"accordion-header\",children:[player.name,\" (Elo: \",player.elo,\") - \",player.points,\" points\"]})}),/*#__PURE__*/_jsx(Accordion.Body,{className:\"accordion-item\",children:getPlayerGames(player.id)})]},player.id))})}),isAdmin&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Register Round\"}),/*#__PURE__*/_jsx(RoundRegisterForm,{players:players,backendUri:backendUri})]}),/*#__PURE__*/_jsx(\"a\",{className:\"App-link\",href:\"https://reactjs.org\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"Learn React\"})]})});}function NavbarMenu(){return/*#__PURE__*/_jsx(Navbar,{expand:\"lg\",className:\"bg-body-tertiary\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Navbar.Brand,{href:\"#home\",children:\"React-Bootstrap\"}),/*#__PURE__*/_jsx(Navbar.Toggle,{\"aria-controls\":\"basic-navbar-nav\"}),/*#__PURE__*/_jsx(Navbar.Collapse,{id:\"basic-navbar-nav\",children:/*#__PURE__*/_jsxs(Nav,{className:\"me-auto\",children:[/*#__PURE__*/_jsx(Nav.Link,{href:\"#home\",children:\"Home\"}),/*#__PURE__*/_jsx(Nav.Link,{href:\"#link\",children:\"Link\"}),/*#__PURE__*/_jsxs(NavDropdown,{title:\"Dropdown\",id:\"basic-nav-dropdown\",children:[/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.1\",children:\"Action\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.2\",children:\"Another action\"}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.3\",children:\"Something\"}),/*#__PURE__*/_jsx(NavDropdown.Divider,{}),/*#__PURE__*/_jsx(NavDropdown.Item,{href:\"#action/3.4\",children:\"Separated link\"})]})]})})]})});}function RoundRegisterForm(_ref){let{players,backendUri}=_ref;const[player1Id,setPlayer1Id]=useState('');const[player2Id,setPlayer2Id]=useState('');const[isDraw,setIsDraw]=useState(false);const[winnerColour,setWinnerColour]=useState('');const[matchLink,setMatchLink]=useState('');const handleSubmit=async e=>{e.preventDefault();// Determine winner and loser based on the selected colors and result\nlet winnerId,loserId;if(!isDraw){winnerId=winnerColour==='White'?player1Id:player2Id;loserId=winnerColour==='Black'?player1Id:player2Id;}const data={player1:{id:player1Id,colour:'White'},player2:{id:player2Id,colour:'Black'},isDraw,matchLink,winnerColour:isDraw?null:winnerColour,loserColour:isDraw?null:winnerColour==='Black'?'White':'Black'};// Send data to server\ntry{const response=await fetch(\"\".concat(backendUri,\"/Round/add-round\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)});if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}else{const result=await response.json();console.log(result);// Handle success response\n}}catch(error){console.error('Error posting data:',error);// Handle errors here\n}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"White:\",/*#__PURE__*/_jsxs(\"select\",{value:player1Id,onChange:e=>setPlayer1Id(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Player\"}),players.map(player=>/*#__PURE__*/_jsx(\"option\",{value:player.id,children:player.name},player.id))]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Black:\",/*#__PURE__*/_jsxs(\"select\",{value:player2Id,onChange:e=>setPlayer2Id(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Player\"}),players.map(player=>/*#__PURE__*/_jsx(\"option\",{value:player.id,children:player.name},player.id))]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Draw:\",/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:isDraw,onChange:e=>setIsDraw(e.target.checked)})]})}),!isDraw&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Winner Colour:\",/*#__PURE__*/_jsxs(\"select\",{value:winnerColour,onChange:e=>setWinnerColour(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Colour\"}),/*#__PURE__*/_jsx(\"option\",{value:\"White\",children:\"White\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Black\",children:\"Black\"})]})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"label\",{children:[\"Match's link:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:matchLink,onChange:e=>setMatchLink(e.target.value),placeholder:\"Match's link\"})]})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"SUBMIT\"})]});}/**\r\n * @param {string} name - The name of the player.\r\n * @param {number} elo - The elo rating of the player.\r\n * @param {string} id - The unique identifier for the player.\r\n * @param {number} gamesWon - The number of games won by the player.\r\n * @param {number} gamesDrawed - The number of games drawn by the player.\r\n * @param {number} gamesLost - The number of games lost by the player.\r\n * @param {number} gamesPlayed - The total number of games played by the player.\r\n * @param {number} points - The total points earned by the player.\r\n **/class Player{constructor(name,elo,id,gamesWon,gamesDrawed,gamesLost,gamesPlayed,points){this.name=name||'';this.elo=elo||0;this.id=id||'';this.gamesWon=gamesWon||0;this.gamesDrawed=gamesDrawed||0;this.gamesLost=gamesLost||0;this.gamesPlayed=gamesPlayed||0;this.points=points||0;}}/**\r\n * @typedef {Object} PlayerInfo\r\n * @property {string} id - The unique identifier for the player.\r\n * @property {string} colour - The color representing the player.\r\n */class PlayerInfo{constructor(id,colour){this.id=id;this.colour=colour;}}/**\r\n * @param {string} id - The unique identifier for the round.\r\n * @param {PlayerInfo} player1 - Information about the first player.\r\n * @param {PlayerInfo} player2 - Information about the second player.\r\n * @param {boolean} isDraw - Indicates if the round is a draw.\r\n * @param {string} matchLink - The link to the match.\r\n * @param {string} winnerColour - The color representing the winner.\r\n * @param {string} loserColour - The color representing the loser.\r\n */class Round{constructor(id,player1,player2,isDraw,matchLink,winnerColour,loserColour){this.id=id;this.player1=player1;this.player2=player2;this.isDraw=isDraw;this.matchLink=matchLink;this.winnerColour=winnerColour;this.loserColour=loserColour;}}export{App,NavbarMenu};","map":{"version":3,"names":["logo","React","useState","useEffect","queryString","Container","Nav","Navbar","NavDropdown","Accordion","jsx","_jsx","jsxs","_jsxs","App","players","setPlayers","rounds","setRounds","isAdmin","setIsAdmin","backendUri","parsedQueryString","parse","window","location","search","adminKey","fetch","concat","then","response","json","data","catch","error","console","map","playerData","Player","name","elo","id","gamesWon","gamesDrawed","gamesLost","gamesPlayed","points","sort","playerA","playerB","roundsData","roundData","Round","PlayerInfo","player1","colour","player2","isDraw","matchLink","winnerColour","loserColour","getPlayerGames","playerId","filter","round","index","playerInfo","opponentInfo","result","playerColor","opponentName","find","opp","children","href","target","rel","displayRoundRegisterForm","className","src","alt","player","Item","eventKey","toString","Header","Body","RoundRegisterForm","NavbarMenu","expand","Brand","Toggle","Collapse","Link","title","Divider","_ref","player1Id","setPlayer1Id","player2Id","setPlayer2Id","setIsDraw","setWinnerColour","setMatchLink","handleSubmit","e","preventDefault","winnerId","loserId","method","headers","body","JSON","stringify","ok","Error","status","log","onSubmit","value","onChange","type","checked","placeholder","constructor"],"sources":["D:/Repos/ChessTournamentGuide/chess-guide/src/App.js"],"sourcesContent":["import logo from \"./chessQueen.png\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport queryString from 'query-string';\r\nimport \"./App.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Accordion from \"react-bootstrap/Accordion\";\r\n\r\nfunction App() {\r\n\t\t/** @type {Player[]} */\r\n\tconst [players, setPlayers] = useState([]);\r\n\tconst [rounds, setRounds] = useState([]);\r\n\tconst [isAdmin, setIsAdmin] = useState(false);\r\n\tconst backendUri =  \"https://localhost:7059\";\r\n\r\n\tuseEffect(() => {\r\n\t\tconst parsedQueryString = queryString.parse(window.location.search);\r\n        const adminKey = parsedQueryString.adminKey;\r\n\r\n\t\tfetch(`${backendUri}/Admin/login?apiKey=${adminKey}`)\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => setIsAdmin(data))\r\n\t\t.catch(error => console.error('Error fetching data:', error));\r\n\r\n        fetch(`${backendUri}/Player/players`)\r\n            .then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst players = data.map(playerData => new Player(\r\n\t\t\t\t\tplayerData.name,\r\n\t\t\t\t\tplayerData.elo,\r\n\t\t\t\t\tplayerData.id,\r\n\t\t\t\t\tplayerData.gamesWon,\r\n\t\t\t\t\tplayerData.gamesDrawed,\r\n\t\t\t\t\tplayerData.gamesLost,\r\n\t\t\t\t\tplayerData.gamesPlayed,\r\n\t\t\t\t\tplayerData.points\r\n\t\t\t\t));\r\n\t\t\t\tplayers.sort((playerA, playerB) => playerB.points - playerA.points);\r\n\t\t\t\tsetPlayers(players);})\r\n            .catch(error => console.error('Error fetching data:', error));\r\n\r\n\t\tfetch(`${backendUri}/Round/rounds`)\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(data => {\r\n\t\t\t\tconst roundsData  = data.map(roundData => new Round(\r\n\t\t\t\t\troundData.id,\r\n\t\t\t\t\tnew PlayerInfo(roundData.player1.id, roundData.player1.colour),\r\n\t\t\t\t\tnew PlayerInfo(roundData.player2.id, roundData.player2.colour),\r\n\t\t\t\t\troundData.isDraw,\r\n\t\t\t\t\troundData.matchLink,\r\n\t\t\t\t\troundData.winnerColour,\r\n\t\t\t\t\troundData.loserColour\r\n\t\t\t\t));\r\n\t\t\t\tsetRounds(roundsData );\r\n\t\t\t})\r\n\t\t\t.catch(error => console.error('Error fetching rounds:', error));\r\n    }, []); // Empty dependency array means this effect runs once on mount\r\n\r\n\t    // Function to get player's game details\r\n\t\tconst getPlayerGames = (playerId) => {\r\n\t\t\treturn rounds.filter(round => round.player1.id === playerId || round.player2.id === playerId)\r\n\t\t\t\t\t\t .map((round, index) => {\r\n\t\t\t\t\t\t\tlet playerInfo;\r\n\t\t\t\t\t\t\tlet opponentInfo;\r\n\t\t\t\t\t\t\tif(round.player1.id === playerId)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tplayerInfo = round.player1;\r\n\t\t\t\t\t\t\t\topponentInfo = round.player2;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tplayerInfo = round.player2;\r\n\t\t\t\t\t\t\t\topponentInfo = round.player1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tlet result = round.isDraw ? 'Draw' : (round.winnerColour === playerInfo.colour ? 'Won' : 'Lost');\r\n\t\t\t\t\t\t\tlet playerColor = playerInfo.colour;\r\n\t\t\t\t\t\t\tlet opponentName = players.find(opp => opp.id === opponentInfo.id).name;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t <div key={index}>\r\n\t\t\t\t\t\t\t\t\t <p>vs {opponentName} : {result} with {playerColor} - <a href={round.matchLink} target=\"_blank\" rel=\"noopener noreferrer\">Link</a></p>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t );\r\n\t\t\t\t\t\t });\r\n\t\t};\r\n\r\n\t\tconst displayRoundRegisterForm = () => {\r\n\t\t\treturn <div>Form</div>\r\n\t\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header className=\"App-header\">\r\n\t\t\t\t{\r\n\t\t\t\t\tisAdmin && (\r\n\t\t\t\t\t\t<p>Logged in as Admin</p>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>\r\n\t\t\t\t\t\tTo play, use <a href=\"https://lichess.org\">Lichess</a>!\r\n\t\t\t\t\t</h1>\r\n\t\t\t\t\t<h1>Winning a game: 3 points</h1>\r\n\t\t\t\t\t<h1>Losing a game: 0 points</h1>\r\n\t\t\t\t\t<h1>Draw: 1 points each</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"separator\" />\r\n\t\t\t\t<div className=\"accordions\">\r\n\t\t\t\t\t<Accordion>\r\n\t\t\t\t\t{players.map((player, index) => (\r\n                        <Accordion.Item eventKey={index.toString()} key={player.id}>\r\n                            <Accordion.Header>\r\n\t\t\t\t\t\t\t\t<div className=\"accordion-header\">{player.name} (Elo: {player.elo}) - {player.points} points</div></Accordion.Header>\r\n                            <Accordion.Body className=\"accordion-item\">\r\n                                {/* Additional details about the player can go here */}\r\n\t\t\t\t\t\t\t\t{getPlayerGames(player.id)}\r\n                            </Accordion.Body>\r\n                        </Accordion.Item>\r\n                    ))}\r\n\t\t\t\t\t</Accordion>\r\n\t\t\t\t</div>\r\n\t\t\t\t{\r\n\t\t\t\t\tisAdmin && (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t<h1>Register Round</h1>\r\n\t\t\t\t\t<RoundRegisterForm players={players} backendUri={backendUri}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName=\"App-link\"\r\n\t\t\t\t\thref=\"https://reactjs.org\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLearn React\r\n\t\t\t\t</a>\r\n\t\t\t</header>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction NavbarMenu() {\r\n\treturn (\r\n\t\t<Navbar expand=\"lg\" className=\"bg-body-tertiary\">\r\n\t\t\t<Container>\r\n\t\t\t\t<Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n\t\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t\t<Nav className=\"me-auto\">\r\n\t\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link>\r\n\t\t\t\t\t\t<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">\r\n\t\t\t\t\t\t\t\tAnother action\r\n\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n\t\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.4\">\r\n\t\t\t\t\t\t\t\tSeparated link\r\n\t\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar.Collapse>\r\n\t\t\t</Container>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\r\nfunction RoundRegisterForm({ players, backendUri }) {\r\n    const [player1Id, setPlayer1Id] = useState('');\r\n    const [player2Id, setPlayer2Id] = useState('');\r\n    const [isDraw, setIsDraw] = useState(false);\r\n    const [winnerColour, setWinnerColour] = useState('');\r\n    const [matchLink, setMatchLink] = useState('');\r\n\r\n\tconst handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Determine winner and loser based on the selected colors and result\r\n        let winnerId, loserId;\r\n        if (!isDraw) {\r\n            winnerId = winnerColour === 'White' ? player1Id : player2Id;\r\n            loserId = winnerColour === 'Black' ? player1Id : player2Id;\r\n        }\r\n\r\n        const data = {\r\n            player1: {\r\n                id: player1Id,\r\n                colour: 'White',\r\n            },\r\n            player2: {\r\n                id: player2Id,\r\n                colour: 'Black',\r\n            },\r\n            isDraw,\r\n            matchLink,\r\n            winnerColour: isDraw ? null : winnerColour,\r\n            loserColour: isDraw ? null : (winnerColour === 'Black' ? 'White' : 'Black')\r\n        };\r\n\r\n        // Send data to server\r\n        try {\r\n            const response = await fetch(`${backendUri}/Round/add-round`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(data),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            } else {\r\n                const result = await response.json();\r\n                console.log(result);\r\n                // Handle success response\r\n            }\r\n        } catch (error) {\r\n            console.error('Error posting data:', error);\r\n            // Handle errors here\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label>\r\n                    White:\r\n                    <select value={player1Id} onChange={e => setPlayer1Id(e.target.value)}>\r\n                        <option value=\"\">Select Player</option>\r\n                        {players.map(player => (\r\n                            <option key={player.id} value={player.id}>{player.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Black:\r\n                    <select value={player2Id} onChange={e => setPlayer2Id(e.target.value)}>\r\n                        <option value=\"\">Select Player</option>\r\n                        {players.map(player => (\r\n                            <option key={player.id} value={player.id}>{player.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <label>\r\n                    Draw:\r\n                    <input type=\"checkbox\" checked={isDraw} onChange={e => setIsDraw(e.target.checked)} />\r\n                </label>\r\n            </div>\r\n            {!isDraw && (\r\n                <div>\r\n                    <label>\r\n                        Winner Colour:\r\n                        <select value={winnerColour} onChange={e => setWinnerColour(e.target.value)}>\r\n                            <option value=\"\">Select Colour</option>\r\n                            <option value=\"White\">White</option>\r\n                            <option value=\"Black\">Black</option>\r\n                        </select>\r\n                    </label>\r\n                </div>\r\n            )}\r\n            <div>\r\n                <label>\r\n                    Match's link:\r\n                    <input type=\"text\" value={matchLink} onChange={e => setMatchLink(e.target.value)} placeholder=\"Match's link\" />\r\n                </label>\r\n            </div>\r\n            <button type=\"submit\">SUBMIT</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {string} name - The name of the player.\r\n * @param {number} elo - The elo rating of the player.\r\n * @param {string} id - The unique identifier for the player.\r\n * @param {number} gamesWon - The number of games won by the player.\r\n * @param {number} gamesDrawed - The number of games drawn by the player.\r\n * @param {number} gamesLost - The number of games lost by the player.\r\n * @param {number} gamesPlayed - The total number of games played by the player.\r\n * @param {number} points - The total points earned by the player.\r\n **/\r\nclass Player {\r\n    constructor(name, elo, id, gamesWon, gamesDrawed, gamesLost, gamesPlayed, points) {\r\n        this.name = name || '';\r\n        this.elo = elo || 0;\r\n        this.id = id || '';\r\n        this.gamesWon = gamesWon || 0;\r\n        this.gamesDrawed = gamesDrawed || 0;\r\n        this.gamesLost = gamesLost || 0;\r\n\t\tthis.gamesPlayed = gamesPlayed || 0;\r\n\t\tthis.points = points || 0;\r\n    }\r\n}\r\n\r\n/**\r\n * @typedef {Object} PlayerInfo\r\n * @property {string} id - The unique identifier for the player.\r\n * @property {string} colour - The color representing the player.\r\n */\r\nclass PlayerInfo {\r\n    constructor(id, colour) {\r\n        this.id = id;\r\n        this.colour = colour;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {string} id - The unique identifier for the round.\r\n * @param {PlayerInfo} player1 - Information about the first player.\r\n * @param {PlayerInfo} player2 - Information about the second player.\r\n * @param {boolean} isDraw - Indicates if the round is a draw.\r\n * @param {string} matchLink - The link to the match.\r\n * @param {string} winnerColour - The color representing the winner.\r\n * @param {string} loserColour - The color representing the loser.\r\n */\r\nclass Round {\r\n    constructor(id, player1, player2, isDraw, matchLink, winnerColour, loserColour) {\r\n        this.id = id;\r\n        this.player1 = player1;\r\n        this.player2 = player2;\r\n        this.isDraw = isDraw;\r\n        this.matchLink = matchLink;\r\n        this.winnerColour = winnerColour;\r\n        this.loserColour = loserColour;\r\n    }\r\n}\r\n\r\nexport { App, NavbarMenu };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}